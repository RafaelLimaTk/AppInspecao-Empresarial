// <auto-generated />
using InspecaoEmpresarial.Infra.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace InspecaoEmpresarial.Infra.Data.Migrations
{
    [DbContext(typeof(InspecaoEmpresarialContext))]
    [Migration("20231213044031_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.0");

            modelBuilder.Entity("InspecaoEmpresarial.Domain.Company", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Address")
                        .HasColumnType("TEXT");

                    b.Property<string>("CNAE")
                        .HasColumnType("TEXT");

                    b.Property<string>("CNPJ")
                        .HasColumnType("TEXT");

                    b.Property<string>("CorporateName")
                        .HasColumnType("TEXT");

                    b.Property<string>("RiskGrade")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Company");
                });

            modelBuilder.Entity("InspecaoEmpresarial.Domain.Establishment", b =>
                {
                    b.Property<int>("EstablishmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Address")
                        .HasColumnType("TEXT");

                    b.Property<int>("CompanyId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Location")
                        .HasColumnType("TEXT");

                    b.Property<string>("Phone")
                        .HasColumnType("TEXT");

                    b.HasKey("EstablishmentId");

                    b.HasIndex("CompanyId");

                    b.ToTable("Establishment");
                });

            modelBuilder.Entity("InspecaoEmpresarial.Domain.ProcessDescription", b =>
                {
                    b.Property<int>("ProcessDescriptionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Activity")
                        .HasColumnType("TEXT");

                    b.Property<int>("CompanyId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Department")
                        .HasColumnType("TEXT");

                    b.HasKey("ProcessDescriptionId");

                    b.HasIndex("CompanyId");

                    b.ToTable("ProcessDescription");
                });

            modelBuilder.Entity("InspecaoEmpresarial.Domain.Responsibility", b =>
                {
                    b.Property<int>("ResponsibilityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CIPA")
                        .HasColumnType("TEXT");

                    b.Property<int>("CompanyId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Employees")
                        .HasColumnType("TEXT");

                    b.Property<string>("FireBrigade")
                        .HasColumnType("TEXT");

                    b.Property<string>("InCharge")
                        .HasColumnType("TEXT");

                    b.Property<string>("Management")
                        .HasColumnType("TEXT");

                    b.Property<string>("SE")
                        .HasColumnType("TEXT");

                    b.Property<string>("SMT")
                        .HasColumnType("TEXT");

                    b.Property<string>("Superintendence")
                        .HasColumnType("TEXT");

                    b.HasKey("ResponsibilityId");

                    b.HasIndex("CompanyId");

                    b.ToTable("Responsibility");
                });

            modelBuilder.Entity("InspecaoEmpresarial.Domain.Establishment", b =>
                {
                    b.HasOne("InspecaoEmpresarial.Domain.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");
                });

            modelBuilder.Entity("InspecaoEmpresarial.Domain.ProcessDescription", b =>
                {
                    b.HasOne("InspecaoEmpresarial.Domain.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");
                });

            modelBuilder.Entity("InspecaoEmpresarial.Domain.Responsibility", b =>
                {
                    b.HasOne("InspecaoEmpresarial.Domain.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");
                });
#pragma warning restore 612, 618
        }
    }
}
